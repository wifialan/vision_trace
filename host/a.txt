['/home/alan/work/vision_trace/host', '/opt/ros/kinetic/lib/python2.7/dist-packages', '/usr/lib/python35.zip', '/usr/lib/python3.5', '/usr/lib/python3.5/plat-x86_64-linux-gnu', '/usr/lib/python3.5/lib-dynload', '/home/alan/.local/lib/python3.5/site-packages', '/usr/local/lib/python3.5/dist-packages', '/usr/lib/python3/dist-packages']
{'2nd line': [0, 0, 7, 8, 9, 0, 0], '1st line': [1, 2, 3, 4, 99, 5, 6]}
[[ 1  2  3  4 99  5  6]
 [ 0  0  7  8  9  0  0]]
岔道口入口坐标：1
岔道口出口坐标：5
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：1
***********************************
1和2的坐标为：[[0, 0], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：1
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：5
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5
[1, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：1
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道口左边
B也在岔道口左边
岔道入口和B之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：2
***********************************
1和3的坐标为：[[0, 0], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：2
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：4
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4
[2, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：2
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道口左边
B在岔道口内
岔道入口和岔道出口之间伪节点数：0
['UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：3
***********************************
1和4的坐标为：[[0, 0], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：3
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：3
从A到B需要的正向步数为：3
从A到B需要的反向步数为：3
[3, 3]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：3
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道口左边
B在岔道口内
岔道入口和岔道出口之间伪节点数：0
['UP', 'LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：5
***********************************
1和5的坐标为：[[0, 0], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[4, 5]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：2
---------------------------------
从A到B需要的正向步数为：4,5
从A到B需要的反向步数为：2
[4, 5, 2]
前2个节点为正向
选择反向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：5
路线：1
正向：0
反向：1
A和B都在第一行，规划路线
多条路线警告
反向规划
A在B左边
A和B之间伪节点数：0
['TURN', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：6
***********************************
1和6的坐标为：[[0, 0], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[5, 6]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：1
---------------------------------
从A到B需要的正向步数为：5,6
从A到B需要的反向步数为：1
[5, 6, 1]
前2个节点为正向
选择反向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：6
路线：1
正向：0
反向：1
A和B都在第一行，规划路线
多条路线警告
反向规划
A在B左边
A和B之间伪节点数：0
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：2
***********************************
1和7的坐标为：[[0, 0], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：2
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：5
从A到B需要的正向步数为：2
从A到B需要的反向步数为：5
[2, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：2
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在入口左边
A和入口之间伪节点数：0
B和入口之间伪节点数：0
['UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：3
***********************************
1和8的坐标为：[[0, 0], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：3
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：3
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在入口左边
A和入口之间伪节点数：0
B和入口之间伪节点数：0
['UP', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：0
B点坐标：4
***********************************
1和9的坐标为：[[0, 0], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：4
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：0
B坐标：4
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在入口左边
['TURN', 'UP', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：0
***********************************
2和1的坐标为：[[0, 1], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：5
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：5
从A到B需要的反向步数为：1
[5, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：0
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道口入口左边
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：2
***********************************
2和3的坐标为：[[0, 1], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：1
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：5
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5
[1, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：2
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口左边
A和B之间伪节点数：0
['LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：3
***********************************
2和4的坐标为：[[0, 1], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：2
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：4
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4
[2, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：3
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口左边
A和B之间伪节点数：0
['LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：5
***********************************
2和5的坐标为：[[0, 1], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[3, 4]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：3
---------------------------------
从A到B需要的正向步数为：3,4
从A到B需要的反向步数为：3
[3, 4, 3]
前2个节点为正向
选择正向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：5
路线：1
正向：1
反向：0
A和B都在第一行，规划路线
多条路线警告
正向规划
A在B左边
A和B之间伪节点数：1
['LEFT', 'UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：6
***********************************
2和6的坐标为：[[0, 1], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[4, 5]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：2
---------------------------------
从A到B需要的正向步数为：4,5
从A到B需要的反向步数为：2
[4, 5, 2]
前2个节点为正向
选择反向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：6
路线：1
正向：0
反向：1
A和B都在第一行，规划路线
多条路线警告
反向规划
A在B左边
A和B之间伪节点数：0
['TURN', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：2
***********************************
2和7的坐标为：[[0, 1], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：1
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：6
从A到B需要的正向步数为：1
从A到B需要的反向步数为：6
[1, 6]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：2
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在入口左边
A和入口之间伪节点数：0
B和入口之间伪节点数：0
['RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：3
***********************************
2和8的坐标为：[[0, 1], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：2
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：5
从A到B需要的正向步数为：2
从A到B需要的反向步数为：5
[2, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：3
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在入口左边
A和入口之间伪节点数：0
B和入口之间伪节点数：0
['RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：1
B点坐标：4
***********************************
2和9的坐标为：[[0, 1], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道入口
入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的正向步数为：3
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：1
B坐标：4
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在入口左边
A和入口之间伪节点数：0
B和入口之间伪节点数：0
['RIGHT', 'UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：0
***********************************
3和1的坐标为：[[0, 2], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：4
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：4
从A到B需要的反向步数为：2
[4, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：0
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B在岔道口入口左边
岔道入口和A之间伪节点数：0
['TURN', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：1
***********************************
3和2的坐标为：[[0, 2], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：5
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：5
从A到B需要的反向步数为：1
[5, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：1
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B也在岔道内
A和B之间伪节点数：0
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：3
***********************************
3和4的坐标为：[[0, 2], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：1
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：5
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5
[1, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：3
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口左边
A和B之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：5
***********************************
3和5的坐标为：[[0, 2], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：2
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4
[2, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：5
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口左边
A和B之间伪节点数：1
['UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：6
***********************************
3和6的坐标为：[[0, 2], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：3
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：3
从A到B需要的反向步数为：3
[3, 3]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：6
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口右边
A和岔道出口之间伪节点数：1
['UP', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：2
***********************************
3和7的坐标为：[[0, 2], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：5
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：2
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在入口和出口之间
['TURN', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：3
***********************************
3和8的坐标为：[[0, 2], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：4
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：3
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在入口和出口之间
['TURN', 'UP', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：4
***********************************
3和9的坐标为：[[0, 2], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：3
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：4
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在岔道口入口和出口之间
A和入口之间伪节点数：1
B和入口之间伪节点数：0
['UP', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：0
***********************************
4和1的坐标为：[[0, 3], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：3
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：3
从A到B需要的反向步数为：3
[3, 3]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：0
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B右边
A在岔道之间
B在岔道入口左边
A和岔道出口之间伪节点数：1
['UP', 'LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：1
***********************************
4和2的坐标为：[[0, 3], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：4
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：4
从A到B需要的反向步数为：2
[4, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：1
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B也在岔道内
A和B之间伪节点数：0
['TURN', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：2
***********************************
4和3的坐标为：[[0, 3], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：5
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：5
从A到B需要的反向步数为：1
[5, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：2
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B也在岔道内
A和B之间伪节点数：0
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：5
***********************************
4和5的坐标为：[[0, 3], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：1
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：5
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5
[1, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：5
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口左边
A和B之间伪节点数：1
['UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：6
***********************************
4和6的坐标为：[[0, 3], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：2
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4
[2, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：6
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道之间
B在岔道出口右边
A和岔道出口之间伪节点数：1
['UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：2
***********************************
4和7的坐标为：[[0, 3], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：4
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：2
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在入口和出口之间
['TURN', 'UP', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：3
***********************************
4和8的坐标为：[[0, 3], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：3
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：3
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在岔道口入口和出口之间
A和入口之间伪节点数：1
B和入口之间伪节点数：0
['UP', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：4
***********************************
4和9的坐标为：[[0, 3], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在入口和出口之间
出口坐标为：5
A和B之间的伪节点数为：1
从A到B需要的正向步数为：2
开始反向规划，需经过岔道出口
岔道入口坐标为：1
A和B之间的伪节点数为：0
从A到B需要的反向步数为：5
从A到B需要的正向步数为：2
从A到B需要的反向步数为：5
[2, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：4
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在岔道口入口和出口之间
A和入口之间伪节点数：1
B和入口之间伪节点数：0
['UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：0
***********************************
5和1的坐标为：[[0, 5], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[4, 5]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：2
---------------------------------
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4,5
[2, 4, 5]
第一个节点为正向
选择正向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：0
路线：1
正向：1
反向：0
A和B都在第一行，规划路线
多条路线警告
正向规划
A在B右边
A和B之间伪节点数：0
['UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：1
***********************************
5和2的坐标为：[[0, 5], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[3, 4]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：3
---------------------------------
从A到B需要的正向步数为：3
从A到B需要的反向步数为：3,4
[3, 3, 4]
第一个节点为正向
选择正向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：1
路线：1
正向：1
反向：0
A和B都在第一行，规划路线
多条路线警告
正向规划
A在B右边
A和B之间伪节点数：0
['UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：2
***********************************
5和3的坐标为：[[0, 5], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：4
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：2
从A到B需要的正向步数为：4
从A到B需要的反向步数为：2
[4, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：2
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B也在岔道内
A和B之间伪节点数：1
['TURN', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：3
***********************************
5和4的坐标为：[[0, 5], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：5
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：1
从A到B需要的正向步数为：5
从A到B需要的反向步数为：1
[5, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：3
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道内
B也在岔道内
A和B之间伪节点数：1
['TURN', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：6
***********************************
5和6的坐标为：[[0, 5], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B左边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：1
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：5
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5
[1, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：6
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B左边
A在岔道口右边
['UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：2
***********************************
5和7的坐标为：[[0, 5], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：4
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：2
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在出口右边
['TURN', 'LEFT', 'UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：3
***********************************
5和8的坐标为：[[0, 5], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：5
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：3
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在出口右边
['TURN', 'LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：5
B点坐标：4
***********************************
5和9的坐标为：[[0, 5], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：6
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：6
从A到B需要的反向步数为：1
[6, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：5
B坐标：4
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在出口右边
['TURN', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：0
***********************************
6和1的坐标为：[[0, 6], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[5, 6]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：1
---------------------------------
从A到B需要的正向步数为：1
从A到B需要的反向步数为：5,6
[1, 5, 6]
第一个节点为正向
选择正向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：0
路线：1
正向：1
反向：0
A和B都在第一行，规划路线
多条路线警告
正向规划
A在B右边
A和B之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：1
***********************************
6和2的坐标为：[[0, 6], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间存在闭环岔路口
检测起始点A是否在目的地B的左边
A在B的左边，按照闭环岔道口计算节点
A和B之间的伪节点个数为：[1, 0]
A到B之间的岔道部分节点个数分别为：[2, 3]
从A到B各个路线花费的步数为：
[4, 5]
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的步数为：2
---------------------------------
从A到B需要的正向步数为：2
从A到B需要的反向步数为：4,5
[2, 4, 5]
第一个节点为正向
选择正向
按照第1条路线规划
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：1
路线：1
正向：1
反向：0
A和B都在第一行，规划路线
多条路线警告
正向规划
A在B右边
A和B之间伪节点数：0
['UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：2
***********************************
6和3的坐标为：[[0, 6], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：3
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：3
从A到B需要的正向步数为：3
从A到B需要的反向步数为：3
[3, 3]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：2
路线：0
正向：1
反向：0
A和B都在第一行，规划路线
正向规划
A在B右边
A在岔道出口右边
B在岔道内
B和岔道出口之间伪节点数：0
['UP', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：3
***********************************
6和4的坐标为：[[0, 6], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：0
从A到B需要的正向步数为：4
开始反向规划
A和B之间的伪节点数为：1
从A到B需要的反向步数为：2
从A到B需要的正向步数为：4
从A到B需要的反向步数为：2
[4, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：3
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道出口右边
B在岔道内
B和岔道出口之间伪节点数：1
['TURN', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：5
***********************************
6和5的坐标为：[[0, 6], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B皆在第一条线路上
A和B在同一条线上且之间没有闭环岔路口
A在B右边
A和B之间的伪节点数为：1
从A到B需要的正向步数为：5
开始反向规划
A和B之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：5
从A到B需要的反向步数为：1
[5, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：5
路线：0
正向：0
反向：1
A和B都在第一行，规划路线
反向规划
A在B右边
A在岔道出口右边
B也在岔道口右边
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：2
***********************************
6和7的坐标为：[[0, 6], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：3
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：2
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
A在第一行
A在岔道口出口右边
B和入口之间伪节点数：0
['UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：3
***********************************
6和8的坐标为：[[0, 6], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：4
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：3
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在出口右边
['TURN', 'UP', 'LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：6
B点坐标：4
***********************************
6和9的坐标为：[[0, 6], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
A在第一行上面
A和B之间存在岔道出口，A在出口右边
入口坐标为：1
出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的正向步数为：5
开始反向规划，需经过岔道出口
岔道出口坐标为：5
A和B之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：6
B坐标：4
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
A在第一行
A在出口右边
['TURN', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：0
***********************************
7和1的坐标为：[[1, 2], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：5
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：0
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口左边
['TURN', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：1
***********************************
7和2的坐标为：[[1, 2], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：6
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：1
从A到B需要的正向步数为：6
从A到B需要的反向步数为：1
[6, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：1
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口左边
['TURN', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：2
***********************************
7和3的坐标为：[[1, 2], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：5
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：2
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口右边
['TURN', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：3
***********************************
7和4的坐标为：[[1, 2], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：4
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：3
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口右边
['TURN', 'UP', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：5
***********************************
7和5的坐标为：[[1, 2], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：3
从A到B需要的反向步数为：99
[3, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：5
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：6
***********************************
7和6的坐标为：[[1, 2], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：4
从A到B需要的反向步数为：99
[4, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：6
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP', 'UP', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：3
***********************************
7和8的坐标为：[[1, 2], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：1
A在B左边
[1, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：3
路线：0
正向：1
反向：0
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
正向规划，这种情况A一定在B的左边
A和B之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：2
B点坐标：4
***********************************
7和9的坐标为：[[1, 2], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：2
A在B左边
[2, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：2
B坐标：4
路线：0
正向：1
反向：0
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
正向规划，这种情况A一定在B的左边
A和B之间伪节点数：0
['UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：0
***********************************
8和1的坐标为：[[1, 3], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：4
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：0
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口左边
['TURN', 'UP', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：1
***********************************
8和2的坐标为：[[1, 3], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：5
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：2
从A到B需要的正向步数为：5
从A到B需要的反向步数为：2
[5, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：1
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口左边
['TURN', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：2
***********************************
8和3的坐标为：[[1, 3], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：4
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：2
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口右边
['TURN', 'UP', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：3
***********************************
8和4的坐标为：[[1, 3], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：3
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：3
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口左边
A和出口之间伪节点数：0
['UP', 'UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：5
***********************************
8和5的坐标为：[[1, 3], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：2
从A到B需要的反向步数为：99
[2, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：5
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：6
***********************************
8和6的坐标为：[[1, 3], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：3
从A到B需要的反向步数为：99
[3, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：6
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP', 'UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：2
***********************************
8和7的坐标为：[[1, 3], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：1
A在B右边
[99, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：2
路线：0
正向：0
反向：1
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
反向规划，这种情况A一定在B的右边
A和B之间伪节点数：0
['TRUN', 'UP']
[[0, 0], [0, 0]]
A点坐标：3
B点坐标：4
***********************************
8和9的坐标为：[[1, 3], [1, 4]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：1
A在B左边
[1, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：3
B坐标：4
路线：0
正向：1
反向：0
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
正向规划，这种情况A一定在B的左边
A和B之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：0
***********************************
9和1的坐标为：[[1, 4], [0, 0]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：3
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：0
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口左边
A和出口之间伪节点数：0
['UP', 'RIGHT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：1
***********************************
9和2的坐标为：[[1, 4], [0, 1]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：4
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口左边
A和入口之间的伪节点数为：0
从A到B需要的反向步数为：3
从A到B需要的正向步数为：4
从A到B需要的反向步数为：3
[4, 3]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：1
路线：0
正向：0
反向：1
A和B仅有一个在第一行，规划路线
反向规划
B在第一行
B在入口左边
['TURN', 'UP', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：2
***********************************
9和3的坐标为：[[1, 4], [0, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：3
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：4
从A到B需要的正向步数为：3
从A到B需要的反向步数为：4
[3, 4]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：2
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口左边
A和出口之间伪节点数：0
['UP', 'LEFT', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：3
***********************************
9和4的坐标为：[[1, 4], [0, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口左边
B和出口之间的伪节点数为：1
B和矩阵左边界之间的伪节点数为：0
A和出口之间的伪节点数为：0
从A到B需要的步数为：2
开始反向规划，需经过岔道入口
岔道入口坐标为：1
B在入口和出口之间
A和B之间的总伪节点数为：0
从A到B需要的反向步数为：5
从A到B需要的正向步数为：2
从A到B需要的反向步数为：5
[2, 5]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：3
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口左边
A和出口之间伪节点数：0
['UP', 'LEFT', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：5
***********************************
9和5的坐标为：[[1, 4], [0, 5]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：1
从A到B需要的反向步数为：99
[1, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：5
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：6
***********************************
9和6的坐标为：[[1, 4], [0, 6]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
A和B有一个在第一行，有一个不在第一行
B在第一行上面
A和B之间存在岔道出口
出口坐标为：5
B在出口右边,不需要反向规划
A和出口之间的伪节点数为：0
从A到B需要的反向步数为：99
从A到B需要的正向步数为：2
从A到B需要的反向步数为：99
[2, 99]
选择正向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：6
路线：0
正向：1
反向：0
A和B仅有一个在第一行，规划路线
正向规划
B在第一行
B在出口右边
A和出口之间伪节点数：0
['UP', 'RIGHT', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：2
***********************************
9和7的坐标为：[[1, 4], [1, 2]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：2
A在B右边
[99, 2]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：2
路线：0
正向：0
反向：1
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
反向规划，这种情况A一定在B的右边
A和B之间伪节点数：0
['TRUN', 'UP', 'UP']
[[0, 0], [0, 0]]
A点坐标：4
B点坐标：3
***********************************
9和8的坐标为：[[1, 4], [1, 3]]
***********************************
岔道口入口坐标：1
岔道口出口坐标：5
这里需要考虑A和B皆不在第一行上面的情况
A和B在同一条路线上，不用考虑岔道口
A和B之间的伪节点数为：0
从A到B需要的步数为：1
A在B右边
[99, 1]
选择反向
岔道口入口坐标：1
岔道口出口坐标：5
A坐标：4
B坐标：3
路线：0
正向：0
反向：1
A和B都不在第一行，规划路线
A和B在同一条路线上，不用考虑岔道口
反向规划，这种情况A一定在B的右边
A和B之间伪节点数：0
['TRUN', 'UP']
************************************
['1 → 2', 'UP']
['1 → 3', 'UP', 'LEFT', 'UP']
['1 → 4', 'UP', 'LEFT', 'UP', 'UP']
['1 → 5', 'TURN', 'UP', 'UP']
['1 → 6', 'TURN', 'UP']
['1 → 7', 'UP', 'RIGHT', 'UP']
['1 → 8', 'UP', 'RIGHT', 'UP', 'UP']
['1 → 9', 'TURN', 'UP', 'UP', 'LEFT', 'UP']
['2 → 1', 'TURN', 'UP']
['2 → 3', 'LEFT', 'UP']
['2 → 4', 'LEFT', 'UP', 'UP']
['2 → 5', 'LEFT', 'UP', 'UP', 'UP']
['2 → 6', 'TURN', 'UP', 'UP']
['2 → 7', 'RIGHT', 'UP']
['2 → 8', 'RIGHT', 'UP', 'UP']
['2 → 9', 'RIGHT', 'UP', 'UP', 'UP']
['3 → 1', 'TURN', 'UP', 'RIGHT', 'UP']
['3 → 2', 'TURN', 'UP']
['3 → 4', 'UP']
['3 → 5', 'UP', 'UP']
['3 → 6', 'UP', 'UP', 'LEFT', 'UP']
['3 → 7', 'TURN', 'UP', 'RIGHT', 'UP']
['3 → 8', 'TURN', 'UP', 'RIGHT', 'UP', 'UP']
['3 → 9', 'UP', 'UP', 'RIGHT', 'UP']
['4 → 1', 'UP', 'LEFT', 'UP', 'UP']
['4 → 2', 'TURN', 'UP', 'UP']
['4 → 3', 'TURN', 'UP']
['4 → 5', 'UP']
['4 → 6', 'UP', 'LEFT', 'UP']
['4 → 7', 'TURN', 'UP', 'UP', 'RIGHT', 'UP']
['4 → 8', 'UP', 'RIGHT', 'UP', 'UP']
['4 → 9', 'UP', 'RIGHT', 'UP']
['5 → 1', 'UP', 'UP']
['5 → 2', 'UP', 'UP', 'UP']
['5 → 3', 'TURN', 'RIGHT', 'UP', 'UP']
['5 → 4', 'TURN', 'RIGHT', 'UP']
['5 → 6', 'UP']
['5 → 7', 'TURN', 'LEFT', 'UP', 'UP', 'UP']
['5 → 8', 'TURN', 'LEFT', 'UP', 'UP']
['5 → 9', 'TURN', 'LEFT', 'UP']
['6 → 1', 'UP']
['6 → 2', 'UP', 'UP']
['6 → 3', 'UP', 'UP', 'LEFT', 'UP']
['6 → 4', 'TURN', 'UP', 'RIGHT', 'UP']
['6 → 5', 'TURN', 'UP']
['6 → 7', 'UP', 'UP', 'UP']
['6 → 8', 'TURN', 'UP', 'LEFT', 'UP', 'UP']
['6 → 9', 'TURN', 'UP', 'LEFT', 'UP']
['7 → 1', 'TURN', 'UP', 'LEFT', 'UP']
['7 → 2', 'TURN', 'UP']
['7 → 3', 'TURN', 'UP', 'RIGHT', 'UP']
['7 → 4', 'TURN', 'UP', 'RIGHT', 'UP', 'UP']
['7 → 5', 'UP', 'UP', 'UP']
['7 → 6', 'UP', 'UP', 'UP', 'RIGHT', 'UP']
['7 → 8', 'UP']
['7 → 9', 'UP', 'UP']
['8 → 1', 'TURN', 'UP', 'UP', 'LEFT', 'UP']
['8 → 2', 'TURN', 'UP', 'UP']
['8 → 3', 'TURN', 'UP', 'UP', 'RIGHT', 'UP']
['8 → 4', 'UP', 'UP', 'LEFT', 'UP']
['8 → 5', 'UP', 'UP']
['8 → 6', 'UP', 'UP', 'RIGHT', 'UP']
['8 → 7', 'TRUN', 'UP']
['8 → 9', 'UP']
['9 → 1', 'UP', 'RIGHT', 'UP', 'UP']
['9 → 2', 'TURN', 'UP', 'UP', 'UP']
['9 → 3', 'UP', 'LEFT', 'UP', 'UP']
['9 → 4', 'UP', 'LEFT', 'UP']
['9 → 5', 'UP']
['9 → 6', 'UP', 'RIGHT', 'UP']
['9 → 7', 'TRUN', 'UP', 'UP']
['9 → 8', 'TRUN', 'UP']
